{"version":3,"sources":["logo.svg","components/BlueBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","BlueBar","_ref","items","react_default","a","createElement","className","esm","type","placeholder","required","isInline","style","color","buttonsStyle","padding","width","btnContainer","background","border","borderRadius","href","App","map","n","display","flexDirection","justifyContent","alignItems","gap","fadePercentage","BlueBar_BlueBar","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wLCM3BC,EAAS,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACvB,OACEC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEL,MAAOA,EACPM,KAAK,OACLC,YAAY,eACZC,UAAQ,EACRJ,UAAU,YACVK,UAAU,EACVC,MAAO,CAAEC,MAAO,WAChBC,aAAc,CAAED,MAAS,OAAQE,QAAQ,OAAOC,MAAM,QACtDC,aAAc,CAACC,WAAW,UAAUC,OAAO,kBAAmBC,aAAa,aAKjFjB,EAAAC,EAAAC,cAAA,KAAGO,MAAO,CAACC,MAAM,WAAYQ,KAAK,gDAAlC,kCCtBAnB,EAAQ,CACZ,iBACA,kBACA,iBACA,eACA,oBACA,SACA,qBACA,eACA,kBACA,kBACA,YACA,UACA,qBACA,gBACA,mBAsDaoB,MApDf,WACE,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,4FAKAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,WAASO,MAAO,CAAEG,QAAS,UACxBb,EAAMqB,IAAI,SAACC,GAAD,OACTrB,EAAAC,EAAAC,cAAA,QAAMO,MAAO,CAAEC,MAAO,YAAcW,EAApC,SAGJrB,EAAAC,EAAAC,cAAA,WACEO,MAAO,CACLa,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,IAAK,UAGP1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEK,MAAO,CAAEC,MAAO,UAAWE,QAAS,OACpCb,MAAOA,EACPO,YAAY,6BACZE,UAAU,KAGdR,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEL,MAAOA,EACPO,YAAY,8BACZG,MAAO,CAAEC,MAAO,UAAWE,QAAS,OACpCe,eAAgB,OAGpB3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAC0B,EAAD,CAAS7B,MAAOA,SCtDb8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCpC,EAAAqC,EAAA,GAAAC,KAAAtC,EAAAuC,KAAA,UAAqBD,KAAK,SAAAnC,GAAiD,IAA9CqC,EAA8CrC,EAA9CqC,OAAQC,EAAsCtC,EAAtCsC,OAAQC,EAA8BvC,EAA9BuC,OAAQC,EAAsBxC,EAAtBwC,OAAQC,EAAczC,EAAdyC,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5C,EAAAC,EAAAC,cAACF,EAAAC,EAAM4C,WAAP,KACE7C,EAAAC,EAAAC,cAAC4C,EAAD,QAOJjB","file":"static/js/main.b1e6ba4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\nimport \"./BlueBar.css\";\n\nimport { Hintput } from \"@ribrary/hintput\";\n\n\nexport const BlueBar= ({ items }) => {\n  return (\n    <div>\n    <div className=\"flexbox\">\n      <div className=\"search\">\n        <h3>Click on search icon, then type your keyword.</h3>\n        <div>\n          <Hintput\n            items={items}\n            type=\"text\"\n            placeholder=\"Search . . .\"\n            required\n            className=\"hintInput\"\n            isInline={false}\n            style={{ color: \"#ffffff\" }}\n            buttonsStyle={{ \"color\": \"#fff\", padding:\"10px\",width:'100%' }}  \n            btnContainer={{background:'#55c7ed',border:'3px solid white', borderRadius:'15px'}}\n          />\n        </div>\n        </div>\n      </div>\n      <a style={{color:'#282c34'}} href=\"https://codepen.io/takaneichinose/pen/gKVXXL\"> source for blue Search bar </a>\n    </div>\n\n  );\n};\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BlueBar } from \"./components/BlueBar\";\nimport { Hintput } from \"@ribrary/hintput\";\nconst items = [\n  \"Roberto Carlos\",\n  \"Roberto Firmino\",\n  \"Roberto Baggio\",\n  \"Lionel Messi\",\n  \"Cristiano Ronaldo\",\n  \"Neymar\",\n  \"Robert Lewandowski\",\n  \"Kylian Mbapp\",\n  \"Kevin De Bruyne\",\n  \"Virgil van Dijk\",\n  \"Sadio Man\",\n  \"Ronaldo\",\n  \"Zlatan Ibrahimovic\",\n  \"Kylian Mbappe\",\n  \"Zinedine Zidane\",\n];\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>\n        Type any of the names from the list below in any of follow search/input\n        boxes.\n      </h1>\n\n      <header className=\"App-header\">\n        <section style={{ padding: \"30px \" }}>\n          {items.map((n) => (\n            <span style={{ color: \"#282c34\" }}>{n}, </span>\n          ))}\n        </section>\n        <section\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            gap: \"150px\",\n          }}\n        >\n          <div>\n            <p>Inline Mode</p>\n            <Hintput\n              style={{ color: \"#1d3557\", padding: \"5px\" }}\n              items={items}\n              placeholder=\"Type a name ...Inline Mode\"\n              isInline={true}\n            />\n          </div>\n          <div>\n            {/* <p>Multiple suggestion Mode</p> */}\n            <Hintput\n              items={items}\n              placeholder=\"Type a name  ...Normal Mode\"\n              style={{ color: \"#d62828\", padding: \"3px\" }}\n              fadePercentage={0.55}\n            />\n          </div>\n          <div>\n            <p>Custom style</p>\n\n            <BlueBar items={items} />\n          </div>\n        </section>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}